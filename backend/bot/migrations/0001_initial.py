# Generated by Django 3.1 on 2020-08-09 20:31

import chatterbot.conversation
import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Réponse',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation', models.CharField(max_length=32)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time that the statement was created at.')),
                ('persona', models.CharField(max_length=50)),
                ('text', models.CharField(max_length=65535)),
                ('search_text', models.CharField(blank=True, max_length=65535)),
                ('in_response_to', models.CharField(max_length=65535, null=True)),
                ('search_in_response_to', models.CharField(blank=True, max_length=65535)),
                ('tags', models.ManyToManyField(related_name='bot_statements', to='bot.Tag')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, chatterbot.conversation.StatementMixin),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='question type (pas de ponctuation,majuscule)')),
                ('asked', models.BigIntegerField(default=1, verbose_name='nombre de fois que la question a été posée')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.answer')),
            ],
            options={
                'verbose_name': 'Question',
                'ordering': ['title'],
            },
        ),
    ]
